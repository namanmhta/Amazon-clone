import numpy as np

def f(x):
    return x * np.sin(x)

def composite_simpsons_rule(a, b, n):
    h = (b - a) / n
    x = np.linspace(a, b, n+1)
    y = f(x)
    integral = h/3 * (y[0] + 4*np.sum(y[1:n:2]) + 2*np.sum(y[2:n-1:2]) + y[n])
    return integral

# Define limits of integration and number of subintervals
a = 0
b = np.pi
n = 8

# Calculate the integral using Composite Simpson's 1/3 rule
integral = composite_simpsons_rule(a, b, n)
print("Approximate value of integral:", integral)
